{"version":3,"sources":["logo.svg","authorize.js","controller.js","rise_vote.js","add_group.js","add_member.js","contract.js","news.js","news_list.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","React","Component","UserControl","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","contractManager","cm","buttons","bind","assertThisInitialized","get_tokens","apply_rewards","test_button","addr","state","token","loaded","set_global_ui","_this2","asyncToGenerator","regenerator_default","a","mark","_callee","tokens","wrap","_context","prev","next","console","log","balanceOf","sent","setState","stop","addOpenTopic","getTopic","permissionCheck","ret","_this3","react_default","createElement","ButtonToolbar","ButtonGroup","className","Button","onClick","id","RiseVotePage","chain_addr","ownedGroups","getOwnedGroups","event","preventDefault","target","stake","parseInt","elements","value","title","category","detail","rate","description","options","option_1","option_2","expiration","expire","dateTime","Date","now","Math","floor","getUnixSec","validGroup","i","length","check_name","String","checked","addGroupTopic","Form","onSubmit","e","handleSubmit","Group","controlId","Label","Control","type","placeholder","as","rows","checks","Check","inline","label","name","key","push","Text","variant","getForm","AddGroup","groupDesc","group_desc","createGroup","AddMember","member","addMember","alert","ContractManager","vc","getContract","gc","provider","window","web3","currentProvider","setProvider","myAcc","eth","accounts","deployed","then","instance","groupId","topicId","optionIdx","vote","getTopicCount","result","toNumber","canVote","owner","desc","count1","count2","lastVoteTime","createTime","expirationTime","getOwnedTopic","user","isUserVote","isUserPaid","getVotedOption","checkPayPermission","deleteMember","newOwner","changeOwner","checkMember","checkMemberResult","getOnwedGroups","groups","getGroup","json_obj","TruffleContract","RealButtons","bt0","bt1","useraddr","expired","clicked","selectedIdx","reward","news_id","send_click","get_reward","userChoiceIdx","rewardStatus","payoff","aria-label","size","Alert","news_RealButton","states","display","RealButton","bt_display","_this4","origin_button","NewsTitle","NewsContent","content","NewsAttribute","RenderNews","Jumbotron","Container","news_RealButtons","NewsList","canViewNewsState","canViewNewsIdx","newsObjs","n_total","offset","count","num_each_page","last_page","next_page","n_news","canView","news_count","display_count","fetch_news","news_objs","cnt","news_canView","news","new_offset","new_count","op1","op2","user_addr","news_jsx","newsObj","details","split","newsOpts","opt1","opt2","newsBlock","getNewsBlock","no_last_page","no_next_page","disabled","list_news","App","ui","login_state","installed","logined","web3Provider","Web3","acct","is_eth_address_exist","login","ui_idx","rise_vote_RiseVotePage","add_group_AddGroup","add_member_AddMember","controller","news_list_NewsList","create_new_group","add_member","create_new_vote","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b0a2b680.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\nimport { Button, Form } from 'react-bootstrap';\n\nclass AuthorizePage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.chainAcct = props.chainAcct;\n    }\n\n    handleSubmit(event) {\n        // send authorize info to the chain\n        event.preventDefault();\n        console.log(\"submit:\", event)\n    }\n    getForm() {\n        return (\n            <Form onSubmit={e => this.handleSubmit(e)}>\n                <Form.Group controlId=\"Address\">\n                    <Form.Label>Your chain address:  </Form.Label>\n                    <p> {this.chainAcct} </p>\n                </Form.Group>\n                <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" />\n                    <Form.Text className=\"text-muted\">\n                        We'll never share your email with anyone else.\n                    </Form.Text>\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Password\" />\n                </Form.Group>\n                <Form.Group controlId=\"formBasicChecbox\">\n                    <Form.Check type=\"checkbox\" label=\"Check me out\" />\n                </Form.Group>\n                <Button variant=\"primary\" type=\"submit\">\n                    Submit\n        </Button>\n            </Form>\n        );\n    }\n    render() {\n        return (\n            <div>\n                <h2> Before your vote, please supply your own information for verification: </h2>\n                {this.getForm()}\n            </div>\n        );\n    }\n}\n\nexport { AuthorizePage };\n","import React from 'react';\nimport { Button, ButtonToolbar, ButtonGroup} from 'react-bootstrap';\n\nclass UserControl extends React.Component {\n    constructor(props){\n        super(props);\n        this.contractManager = props.cm\n        this.buttons = this.buttons.bind(this)\n        this.get_tokens = this.get_tokens.bind(this)\n        this.apply_rewards = this.apply_rewards.bind(this)\n        this.test_button = this.test_button.bind(this)\n        this.addr = props.addr;\n        this.state = {token: -1, loaded: false}\n        this.get_tokens();\n        this.set_global_ui = props.set_global_ui; // todo: implement a global ui state\n    }\n\n    get_tokens(){\n        // call get tokens()\n        (async () => {\n            console.log(this)\n            let tokens = await this.contractManager.balanceOf(this.addr)\n            this.setState({token: tokens, loaded: true})\n        })()\n    }\n\n    apply_rewards(){\n        // decrepted!\n        // todo: call apply rewards\n        // todo: tell user rewards will be added after a while\n        this.setState({token: 2.0})\n        console.log(\"apply_rewards\")\n        console.log(this.contractManager.addOpenTopic)\n        this.contractManager.getTopic(1, false)\n    }\n\n    async test_button(){\n        // let ret = await this.contractManager.getOwnedGroups()\n        let ret = await this.contractManager.permissionCheck(5)\n        console.log(\"owned group:\", ret)\n    }\n\n    buttons(){\n        return(\n            <ButtonToolbar>\n            <ButtonGroup className=\"mr-2\">\n                <Button onClick={() => {this.set_global_ui(0)}}> Check News </Button>\n            </ButtonGroup>\n            <ButtonGroup className=\"mr-2\">\n                <Button onClick={() => {this.set_global_ui(1)}}> Create Groups </Button>\n            </ButtonGroup>\n            <ButtonGroup className=\"mr-2\">\n                <Button onClick={() => {this.set_global_ui(2)}}> Add Users to group </Button>\n            </ButtonGroup>\n            <ButtonGroup className=\"mr-2\">\n                <Button onClick={() => {this.set_global_ui(3)}}> Create News </Button>\n            </ButtonGroup>\n            {/* <ButtonGroup className=\"mr-2\">\n                <Button onClick={this.apply_rewards}> Reward Test </Button>\n            </ButtonGroup>\n            <ButtonGroup className=\"mr-2\">\n                <Button onClick={this.test_button}> Test USE </Button>\n            </ButtonGroup> */}\n            </ButtonToolbar>\n        )\n    }\n    render(){\n        return (\n            <div id=\"user_control\">\n                <div id=\"user_info\">\n                    <p>your address: {this.addr} </p>\n                    <p>your tokens: {this.state.loaded? this.state.token: \"loading...\"} </p>\n                </div>\n                {this.buttons()}\n            </div>\n        )\n    }\n}\n\nexport default UserControl;","import React from 'react'\nimport { Button, Form } from 'react-bootstrap';\n\nfunction getUnixSec(){\n    const dateTime = Date.now();\n    const timestamp = Math.floor(dateTime / 1000);\n    return timestamp\n}\n\nclass RiseVotePage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.contractManager = props.cm\n        this.chain_addr = props.chain_addr;\n        this.state = {ownedGroups: []}\n        this.set_global_ui = props.set_global_ui; // todo: implement a global ui state\n    }\n\n    async componentDidMount(){\n        // load my owned groups\n        let ownedGroups = await this.contractManager.getOwnedGroups()\n        this.setState({ownedGroups: ownedGroups})\n    }\n\n    handleSubmit(event) {\n        // send new vote info to the chain\n        event.preventDefault();\n        const target = event.target\n        let stake = parseInt(target.elements.stake.value)\n        let title = target.elements.title.value\n        let category = target.elements.category.value\n        let detail = target.elements.detail.value\n        let rate = parseInt(target.elements.rate.value)\n        let opt1 = target.elements.option_1.value\n        let opt2 = target.elements.option_2.value\n        let expireSec = parseInt(target.elements.expire.value) * 3600 * 24\n        \n        // compute submit queries\n        let description = title + \";\" + detail + \";\" + category\n        let options = opt1 + \";\" + opt2\n        let expiration = expireSec + getUnixSec()\n        let validGroup = 0\n        for(var i=0;i<this.state.ownedGroups.length;i++){\n            let check_name = \"radio\" + String(this.state.ownedGroups[i])\n            let isChecked = target.elements[check_name].checked\n            if(isChecked){\n                validGroup = this.state.ownedGroups[i]\n            }\n        }\n        if(validGroup === 0){\n            this.contractManager.addOpenTopic(stake, description, rate, options, expiration)\n        } else {\n            this.contractManager.addGroupTopic(stake, description, rate, options, expiration, validGroup)\n        }\n        this.set_global_ui(0);\n    }\n\n    getForm() {\n        return (\n            <Form onSubmit={e => this.handleSubmit(e)}>\n                <Form.Group controlId=\"Address-1\">\n                    <Form.Label>Your chain address:  </Form.Label>\n                    <p> {this.chain_addr} </p>\n                </Form.Group>\n                <Form.Group controlId=\"stake\">\n                    <Form.Label> Stake: </Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"\" />\n                </Form.Group>\n                <Form.Group controlId=\"title\">\n                    <Form.Label> Title: </Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"\" />\n                </Form.Group>\n                <Form.Group controlId=\"category\">\n                    <Form.Label> Category: </Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"\" />\n                </Form.Group>\n                <Form.Group controlId=\"detail\">\n                    <Form.Label> Detail: </Form.Label>\n                    <Form.Control as=\"textarea\" rows=\"3\" />\n                </Form.Group>\n                <Form.Group controlId=\"rate\">\n                    <Form.Label> Rate: </Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"\" />\n                </Form.Group>\n                <Form.Group controlId=\"option_1\">\n                    <Form.Label> Option_1: </Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"\" />\n                </Form.Group>\n                <Form.Group controlId=\"option_2\">\n                    <Form.Label> Option_2: </Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"\" />\n                </Form.Group>\n                <Form.Group controlId=\"expire\">\n                    <Form.Label> Expire Days: </Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"\" />\n                </Form.Group>\n                <Form.Group controlId=\"groups-risevote\">\n                <Form.Label> Group Id Limit: </Form.Label>\n                {(() => {\n                    var checks = [\n                        <Form.Check inline label='0 (means no limit)' type='radio' name=\"group\" id={\"radio\" + String(0)} key={0} />\n                    ]\n                    for(var i=0;i<this.state.ownedGroups.length;i++){\n                        console.log(this.state.ownedGroups[i])\n                        checks.push(\n                            <Form.Check inline label={this.state.ownedGroups[i]} type='radio' name=\"group\" id={\"radio\" + String(this.state.ownedGroups[i])} key={this.state.ownedGroups[i]} />\n                        )                    }\n                    return checks\n                })()}\n                <Form.Text className=\"text-muted\">\n                    No check means no limit.\n                </Form.Text>\n                </Form.Group>\n                <Button variant=\"primary\" type=\"submit\">\n                    Submit\n                </Button>\n            </Form>\n        );\n    }\n    render() {\n        return (\n            <div>\n                <h2> Create a new vote </h2>\n                {this.getForm()}\n            </div>\n        );\n    }\n}\n\nexport { RiseVotePage };\n","import React from 'react'\nimport { Button, Form } from 'react-bootstrap';\n\nclass AddGroup extends React.Component {\n    constructor(props) {\n        super(props);\n        this.chain_addr = props.chain_addr;\n        this.contractManager = props.cm\n        this.set_global_ui = props.set_global_ui; // todo: implement a global ui state\n    }\n\n    async handleSubmit(event) {\n        // send new vote info to the chain\n        event.preventDefault();\n        const target = event.target\n        let groupDesc = target.elements.group_desc.value\n        console.log(\"submit:\", groupDesc);\n        await this.contractManager.createGroup(groupDesc)\n        this.set_global_ui(0);\n    }\n\n    getForm() {\n        return (\n            <Form onSubmit={e => this.handleSubmit(e)}>\n                <Form.Group controlId=\"Address\">\n                    <Form.Label>Your chain address:  </Form.Label>\n                    <p> {this.chain_addr} </p>\n                </Form.Group>\n                {/* <Form.Group controlId=\"group_id\">\n                    <Form.Label> Group id: </Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"\" />\n                </Form.Group> */}\n                <Form.Group controlId=\"group_desc\">\n                    <Form.Label> Group description: </Form.Label>\n                    <Form.Control as=\"textarea\" rows=\"3\"/>\n                    <Form.Text className=\"text-muted\">\n                        For example, 'this group is for our company's internal management'.\n                    </Form.Text>\n                </Form.Group>\n                <Button variant=\"primary\" type=\"submit\">\n                    Submit\n                </Button>\n            </Form>\n        );\n    }\n    render() {\n        return (\n            <div>\n                <h2> Create a new group </h2>\n                {this.getForm()}\n            </div>\n        );\n    }\n}\n\nexport { AddGroup };\n","import React from 'react'\nimport { Button, Form } from 'react-bootstrap';\n\nclass AddMember extends React.Component {\n    constructor(props) {\n        super(props);\n        this.contractManager = props.cm\n        this.chain_addr = props.chain_addr;\n        this.state = {ownedGroups: []}\n        this.set_global_ui = props.set_global_ui; // todo: implement a global ui state\n    }\n\n    async componentDidMount(){\n        // load my owned groups\n        let ownedGroups = await this.contractManager.getOwnedGroups()\n        this.setState({ownedGroups: ownedGroups})\n    }\n\n    handleSubmit(event) {\n        // send new vote info to the chain\n        event.preventDefault();\n        const target = event.target\n        let validGroup = 0\n        for(var i=0;i<this.state.ownedGroups.length;i++){\n            let check_name = \"am_radio\" + String(this.state.ownedGroups[i])\n            let isChecked = target.elements[check_name].checked\n            if(isChecked){\n                validGroup = this.state.ownedGroups[i]\n            }\n        }\n        let member = target.elements.member.value\n        if(validGroup === 0){\n            alert(\"Please click a group!\")\n            return\n        }\n        this.contractManager.addMember(validGroup, member)\n    }\n\n    getForm() {\n        return (\n            <Form onSubmit={e => this.handleSubmit(e)}>\n                <Form.Group controlId=\"Address-member\">\n                    <Form.Label>Your chain address:  </Form.Label>\n                    <p> {this.chain_addr} </p>\n                </Form.Group>\n                <Form.Group controlId=\"groups-addmember\">\n                <Form.Label> Group Id: </Form.Label>\n                {(() => {\n                    var checks = [\n                    ]\n                    for(var i=0;i<this.state.ownedGroups.length;i++){\n                        console.log(this.state.ownedGroups[i])\n                        checks.push(\n                            <Form.Check inline label={this.state.ownedGroups[i]} type='radio' name=\"group\" id={\"am_radio\" + String(this.state.ownedGroups[i])} key={this.state.ownedGroups[i]} />\n                        )                    }\n                    return checks\n                })()}\n                <Form.Text className=\"text-muted\">\n                    Choose a group to add a member.\n                </Form.Text>\n                </Form.Group>\n                <Form.Group controlId=\"member\">\n                    <Form.Label> Members to add: </Form.Label>\n                    <Form.Control as=\"textarea\" rows=\"3\"/>\n                    <Form.Text className=\"text-muted\">\n                        Please input the member to be added here.\n                    </Form.Text>\n                </Form.Group>\n                <Button variant=\"primary\" type=\"submit\">\n                    Submit\n                </Button>\n            </Form>\n        );\n    }\n    render() {\n        return (\n            <div>\n                <h2> Add more members to a group </h2>\n                {this.getForm()}\n            </div>\n        );\n    }\n}\n\nexport { AddMember };\n","import gc from './GroupController.json'\nimport vc from './VoteController.json'\n\nclass ContractManager{\n    constructor(){\n        this.vc = getVoteContract()\n        this.gc = getGroupContract()\n        let provider = window.web3.currentProvider;\n        this.vc.setProvider(provider)\n        this.gc.setProvider(provider)\n        this.myAcc = window.web3.eth.accounts[0];\n        window.vc = vc\n        window.gc = gc\n    }\n\n    // transaction of vc\n    addOpenTopic(stake, description, rate, options, expire){\n        this.vc.deployed().then(function(instance){\n            return instance.addOpenTopic(stake, description, rate, options, expire);\n        })\n    }\n    addGroupTopic(stake, description, rate, options, expire, groupId){\n        this.vc.deployed().then(function(instance){\n            return instance.addGroupTopic(groupId, stake, description, rate, options, expire);\n        })\n    }\n    vote(topicId, optionIdx){\n        this.vc.deployed().then(function(instance){\n            return instance.vote(topicId, optionIdx);\n        })\n    }\n    payoff(topicId){\n        this.vc.deployed().then(function(instance){\n            return instance.vote(topicId);\n        })\n    }\n    // call of vc\n    async getTopicCount(){\n        let instance = await this.vc.deployed()\n        let result = await instance.getTopicCount.call()\n        return result.toNumber()\n    }\n\n    async getTopic(id, canVote){\n        let instance = await this.vc.deployed()\n        let result = await instance.getTopic.call(id, canVote)\n        let ret = {\n            owner: result[0],\n            stake: result[1].toNumber(),\n            desc: result[2],\n            rate: result[3].toNumber(),\n            options: result[4],\n            count1: result[5].toNumber(),\n            count2: result[6].toNumber(),\n            lastVoteTime: result[7].toNumber(),\n            createTime: result[8].toNumber(),\n            expirationTime: result[9].toNumber(),\n            groupId: result[10].toNumber(),\n        }\n        return ret\n    }\n\n    getOwnedTopic(owner){\n        var ret\n        this.vc.deployed().then(function(instance){\n            return instance.getOwnedTopic.call(owner);\n        }).then(function(result){\n            ret = result;\n        })\n        return ret;\n    }\n    \n    async permissionCheck(topicId){\n        let instance = await this.vc.deployed()\n        let result = await instance.permissionCheck.call(topicId);\n        return result.toNumber()\n    }\n\n    async isUserVote(topicId, user){\n        let instance = await this.vc.deployed()\n        let result = await instance.isUserVote.call(user, topicId)\n        return result\n    }\n\n    async isUserPaid(topicId, user){\n        let instance = await this.vc.deployed()\n        let result = await instance.isUserPaid(topicId, user);\n        return result\n    }\n\n    async getVotedOption(topicId){\n        let instance = await this.vc.deployed()\n        let result = await instance.getVotedOption(topicId)\n        return result.toNumber()\n    }\n\n    async checkPayPermission(topicId){\n        let instance = await this.vc.deployed()\n        let result = await instance.checkPayPermission(topicId);\n        return result.toNumber()\n    }\n\n    // transaction of group contract\n    createGroup(description){\n        this.gc.deployed().then(function(instance){\n            return instance.createGroup(description);\n        })\n    }\n    addMember(groupId, user){\n        this.gc.deployed().then(function(instance){\n            return instance.addMember(groupId, user);\n        })\n    }\n    deleteMember(groupId, user){\n        this.gc.deployed().then(function(instance){\n            return instance.deleteMember(groupId, user);\n        })\n    }\n    changeOwner(groupId, newOwner){\n        this.gc.deployed().then(function(instance){\n            return instance.changeOwner(groupId, newOwner);\n        })\n    }\n    // call of group contract\n    async checkMember(user, groupId){\n        let instance = await this.gc.deployed()\n        let checkMemberResult = await instance.checkMember.call(user, groupId)\n        return checkMemberResult\n    }\n    async getOwnedGroups(){\n        let instance = await this.gc.deployed()\n        let ret = await instance.getOnwedGroups.call()\n        let groups = []\n        for(let i=0;i<ret.length;i++){\n            groups.push(ret[i].toNumber())\n        }\n        return groups\n    }\n\n    getGroup(groupId){\n        var ret\n        this.gc.deployed().then(function(instance){\n            return instance.getGroup.call(groupId);\n        }).then(function(result){\n            ret = {\n                owner: result[0],\n                description: result[1],\n            };\n        })\n        return ret;\n    }\n    // account\n    async balanceOf(owner){\n        let instance = await this.vc.deployed()\n        let ret = await instance.balanceOf.call(owner)\n        return ret.toNumber()\n    }\n\n}\n\nfunction getContract(json_obj){\n    return window.TruffleContract(json_obj)\n}\n\nfunction getVoteContract(){\n    // console.log({vc})\n    // let vc_obj = JSON.parse({vc})\n    return getContract(vc)\n}\n\nfunction getGroupContract(){\n    // let gc_obj = JSON.parse({gc})\n    return getContract(gc)\n}\n\nexport {ContractManager};","import React from 'react';\nimport { Button, ButtonToolbar, Jumbotron, Container, ButtonGroup, Alert } from 'react-bootstrap';\n\nclass RealButtons extends React.Component {\n  constructor(props) {\n    super(props);\n    this.contractManager = props.cm\n    this.bt0 = props.bt0 // button 0 name\n    this.bt1 = props.bt1 // button 1 name\n    this.useraddr = props.addr\n    this.expired = props.expired\n    this.state = { loaded:false, clicked: false, selectedIdx: 0, sent: false, expired: this.expired, reward: 2}; // reward: 0=have reward, 1=reward paid, 2=no reward\n    this.news_id = props.news_id;\n    this.send_click = this.send_click.bind(this);\n    this.get_reward = this.get_reward.bind(this);\n  }\n\n  async componentDidMount(){\n    // check vote\n    let isUserVote = await this.contractManager.isUserVote(this.news_id, this.useraddr)\n    console.log(\"have_vote\", isUserVote)\n    if(isUserVote){\n      let userChoiceIdx = await this.contractManager.getVotedOption(this.news_id)\n      // check reward\n      var reward\n      let rewardStatus = await this.contractManager.checkPayPermission(this.news_id)\n      if(rewardStatus === 0){\n        reward = 0\n      } else if(rewardStatus === 3){\n        reward = 1\n      } else {\n        reward = 2\n      }\n      this.setState({loaded:true, clicked: true, selectedIdx: userChoiceIdx, sent: true, reward: reward})\n    } else {\n      this.setState({loaded:true, clicked: false})\n    }\n  }\n\n  send_click(selectedIdx) {\n    // todo: call send_click()\n    console.log(this.news_id, selectedIdx)\n    this.contractManager.vote(this.news_id, selectedIdx)\n    this.setState({ clicked: true, selectedIdx: selectedIdx, sent: true })\n  }\n\n  get_reward(){\n    if(this.state.reward === 0){\n      this.contractManager.payoff(this.news_id)\n    }\n  }\n\n  render() {\n    console.log(this.state.clicked)\n    if(this.state.expired){\n      if(this.state.reward === 0){\n        // can get reward\n        return (\n          <ButtonGroup className=\"mr-2\" aria-label=\"Reward group\">\n          <Button size='sm' onClick={() => this.get_reward()}> {\"Get Reward\"} </Button>\n          </ButtonGroup>\n        )\n\n      } else if(this.state.reward === 1){\n        // have been paid for reward\n        return(\n          <Alert variant=\"primary\">\n          {\"You have got reward for your vote.\"}\n        </Alert>\n        )\n      } else {\n        // no reward\n        return (\n          <Alert variant=\"danger\">\n          {\"This topic is expired.\"}\n        </Alert>\n        )\n      }\n    }\n    if(!this.state.loaded){\n      return \"loading...\"\n    }\n    if (!this.state.clicked) {\n      return (\n        <ButtonToolbar>\n          <RealButton selectedIdx={1} states={this.state} news_id={this.news_id} display={this.bt0} onClick={this.send_click} />\n          <RealButton selectedIdx={2} states={this.state} news_id={this.news_id} display={this.bt1} onClick={this.send_click} />\n        </ButtonToolbar>\n      )\n    } else {\n      if (!this.state.sent) {\n        return (\n          <Alert variant=\"danger\">\n            {\"You send \" + (this.state.selectedIdx === 1 ? this.bt0 : this.bt1) + \" for news \" + this.news_id + \" failed.\"}\n          </Alert>\n        )\n      } else {\n        return (\n          <Alert variant=\"primary\">\n            {\"You have voted \" + (this.state.selectedIdx === 1 ? this.bt0 : this.bt1) + \" for news \" + this.news_id}\n          </Alert>\n        )\n      }\n    }\n  }\n}\n\nclass RealButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.selectedIdx = props.selectedIdx; // 1 or 2\n    this.states = props.states;\n    this.news_id = props.news_id;\n    this.onClick = props.onClick;\n    this.bt_display = props.display;\n  }\n\n  origin_button() {\n    if (this.selectedIdx === 1) {\n      return (\n        <ButtonGroup className=\"mr-2\" aria-label=\"Second group\">\n          <Button size='sm' onClick={() => this.onClick(this.selectedIdx)}> {this.bt_display} </Button>\n        </ButtonGroup>\n      )\n    } else {\n      return (\n        <ButtonGroup className=\"mr-2\" aria-label=\"Second group\">\n          <Button size='sm' variant=\"danger\" onClick={() => this.onClick(this.selectedIdx)}> {this.bt_display} </Button>\n        </ButtonGroup>\n      )\n    }\n    // return e(\n    //   'button',\n    //   { onClick: () => this.onClick(this.selectedIdx)},\n\n    // );\n  }\n\n  render() {\n    return this.origin_button();\n  }\n}\n\nfunction NewsTitle(props) {\n  return (<h2>{props.title}</h2>);\n}\n\nfunction NewsContent(props) {\n  return (<p>{props.content}</p>);\n}\n\nfunction NewsAttribute(props) {\n  return (<div>\n    <b>category:</b> {props.category}\n  </div>)\n}\n\nfunction RenderNews(props) {\n  return (\n    <Jumbotron>\n      <Container>\n        <NewsTitle title={props.title} />\n        <NewsAttribute category={props.category}> </NewsAttribute>\n        <NewsContent content={props.content} />\n        <RealButtons news_id={props.news_id} bt0={props.bt0} bt1={props.bt1} cm={props.cm} addr={props.addr} expired={props.expired} />\n      </Container>\n    </Jumbotron>\n  );\n}\n\nexport { RenderNews };\n","import React from 'react';\nimport {RenderNews} from './news';\nimport { Button, ButtonGroup} from 'react-bootstrap';\n\n\nclass NewsList extends React.Component{\n    constructor(props){\n        super(props)\n        this.contractManager = props.cm\n        this.chain_addr = props.addr\n        this.canViewNewsState = []\n        this.canViewNewsIdx = []\n        this.newsObjs = [] // update by componentDidUpdate\n        this.state = {loaded: false, n_total: 0, offset: 0, count: 0}\n        this.num_each_page = 3\n        this.last_page = this.last_page.bind(this);\n        this.next_page = this.next_page.bind(this);\n    }\n\n    async componentDidMount(){\n        // get n_total and update count and offset\n        let n_news = await this.contractManager.getTopicCount()\n        for(let i=n_news;i>=1;i--){\n            let canView = await this.contractManager.permissionCheck(i)\n            if(canView === 0 || canView === 3 || canView === 4){\n                this.canViewNewsState.push(canView)\n                this.canViewNewsIdx.push(i)\n            }\n        }\n        let news_count = this.canViewNewsIdx.length\n        let display_count = news_count > this.num_each_page? this.num_each_page : news_count;\n        await this.fetch_news(0, display_count)\n        this.setState({\n            n_total: news_count,\n            offset: 0,\n            count: display_count,\n            loaded: true,\n        })\n        // await this.fetch_news(this.state.offset, this.state.count)\n        console.log(this.state)\n    }\n\n    async fetch_news(offset, count){\n        let news_objs = []\n        for(var cnt = 0; cnt < count; cnt++){\n            let news_id = this.canViewNewsIdx[offset + cnt]\n            let news_canView = this.canViewNewsState[offset + cnt]\n            let news = await this.contractManager.getTopic(news_id, true)\n            if(news_canView === 4){\n                news.expired = true;\n            } else {\n                news.expired = false;\n            }\n            news.news_id = news_id\n            news_objs.push(news)\n        }\n        this.newsObjs = news_objs\n    }\n\n    async componentDidUpdate(){\n        // fetch news\n        console.log(\"did update\")\n        // await this.fetch_news(this.state.offset, this.state.count)\n    }\n\n    async next_page(){\n        let new_offset = this.state.offset + this.num_each_page\n        let new_count = this.state.n_total - new_offset\n        if(new_count > this.num_each_page){\n            new_count = this.num_each_page\n        }\n        console.log(\"new\", new_offset, new_count)\n        await this.fetch_news(new_offset, new_count)\n        console.log(this.newsObjs)\n        this.setState({\n            offset: new_offset,\n            count: new_count,\n        })\n    }\n\n    async last_page(){\n        let new_offset = this.state.offset - this.num_each_page\n        let new_count = this.state.n_total - new_offset\n        if(new_count > this.num_each_page){\n            new_count = this.num_each_page\n        }\n        await this.fetch_news(new_offset, new_count)\n        this.setState({\n            offset: new_offset,\n            count: new_count,\n        })\n    }\n\n    getNewsBlock(title, content, news_id, category, op1, op2, user_addr, expired) {\n        return (<RenderNews title={title} content={content} news_id={news_id} category={category} bt0={op1} bt1={op2} cm={this.contractManager} addr={user_addr} expired={expired} key={news_id} />);\n    }\n\n    list_news(){\n        console.log(\"render\", this.newsObjs)\n        let news_jsx = []\n        for(var i=0;i<this.newsObjs.length;i++){\n            let newsObj = this.newsObjs[i]\n            let newsDesc = newsObj.desc;\n            let details = newsDesc.split(\";\")\n            let title = details[0]\n            let content = details[1]\n            let category = details[2]\n            let newsOpts = newsObj.options.split(\";\");\n            let opt1 = newsOpts[0]\n            let opt2 = newsOpts[1]\n            let expired = newsObj.expired;\n            let news_id = newsObj.news_id\n            let newsBlock = this.getNewsBlock(title, content, news_id, category, opt1, opt2, this.chain_addr, expired)\n            news_jsx.push(newsBlock)\n        }\n        var no_last_page = false, no_next_page = false\n        if(this.state.offset + this.state.count >= this.state.n_total){\n            no_next_page = true\n        }\n        if(this.state.offset === 0){\n            no_last_page = true\n        }\n        return(\n          <div id=\"news\">\n          <h2> News List </h2>\n          {news_jsx}\n          <ButtonGroup className=\"mr-2\" aria-label=\"LastPage group\">\n          <Button size='lg' onClick={this.last_page} disabled={no_last_page}> {\"Last Page\"} </Button>\n          </ButtonGroup>\n          <ButtonGroup className=\"mr-2\" aria-label=\"NextPage group\">\n          <Button size='lg' onClick={this.next_page} disabled={no_next_page}> {\"Next Page\"} </Button>\n          </ButtonGroup>\n        </div>\n        )\n    }\n\n    render(){\n        if(!this.state.loaded){\n            return (\n                <h2>loading news... </h2>\n            )\n        }\n        return (\n            this.list_news()\n        )\n    }\n}\n\nexport {NewsList};","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { AuthorizePage } from \"./authorize\"\nimport UserControl from \"./controller\"\nimport {RiseVotePage} from \"./rise_vote\"\nimport {AddGroup} from \"./add_group\"\nimport {AddMember} from \"./add_member\"\nimport {ContractManager} from \"./contract\"\nimport { NewsList } from './news_list';\n\nfunction check_auth(addr) {\n  // invoke chain rpc to check\n  return true\n}\n\n// get address/private key from web3/metamask\nfunction login() {\n  var is_eth_address_exist = function () {\n    var web3Provider\n    var web3 = window.web3\n    var Web3 = window.Web3\n    if (typeof web3 != 'undefined') {\n      web3Provider = web3.currentProvider;\n      console.log('metamask detected in eth address exist');\n    } else {\n      console.log('no metamask');\n      return { state: 10000 };\n    }\n\n    web3 = new Web3(web3Provider);\n    if (typeof web3.eth.accounts[0] != 'undefined') {\n      console.log('metamask succ');\n      const ret = {\n        acct: web3.eth.accounts[0],\n        state: 0\n      }\n      return ret;\n      // $scope.isEthAddrExist = true; \n    } else {\n      console.log(\"cannot detect metamask account.\");\n      return { state: 20000 };\n    }\n  }\n  var installed = false;\n  var logined = false;\n  var addr = \"1234\";\n\n  let ret = is_eth_address_exist()\n  if (ret.state === 0) {\n    installed = true;\n    logined = true;\n    addr = ret.acct;\n  }\n  if(ret.state === 20000){\n    installed = true;\n    logined = false;\n    addr = -1;\n  }\n  var login_state = {\n    installed: installed,\n    logined: logined,\n    addr: addr\n  }\n  return login_state\n}\n\nfunction installMetaMask() {\n  return <div>\n    <h1> Please install metamask extension on Chrome before using VoteChain! </h1>\n  </div>\n}\n\nfunction pleaseLogin(){\n  return <div>\n  <h1> Please log in metamask extension on Chrome before using VoteChain! </h1>\n</div>\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {ui: 0};\n    this.set_global_ui = this.set_global_ui.bind(this);\n    this.chain_addr = \"\"\n    this.contractManager = new ContractManager();\n    this.login_state = login()\n    // this.contractManager.getTopicCount();\n  }\n\n  async componentDidMount(){\n    if(!this.login_state.installed || ! this.login_state.logined){\n      return // if not login, return directly.\n    }\n    // load news\n    this.chain_addr = this.login_state.addr\n  }\n\n  set_global_ui(ui_idx){\n    this.setState({ui: ui_idx})\n  }\n\n  create_new_vote(){\n    return (\n      <div id=\"create_vote\">\n      <RiseVotePage chain_addr={this.chain_addr} set_global_ui={this.set_global_ui} cm={this.contractManager}></RiseVotePage>\n      </div>\n    )\n  }\n  create_new_group(){\n    return (\n      <div id=\"create_group\">\n      <AddGroup chain_addr={this.chain_addr} set_global_ui={this.set_global_ui} cm={this.contractManager}></AddGroup>\n      </div>\n    )\n  }\n  add_member(){\n    return (\n      <div id=\"add_member\">\n      <AddMember chain_addr={this.chain_addr} set_global_ui={this.set_global_ui} cm={this.contractManager}></AddMember>\n      </div>\n    )\n  }\n\n  render() {\n    var login_state = this.login_state\n    if (!login_state.installed) {\n      return (\n        <div>\n          {installMetaMask()}\n        </div>\n      )\n    }\n    if (!login_state.logined) {\n      return (\n        <div>\n          {pleaseLogin()}\n        </div>\n      )\n    }\n    // check authorized\n    let is_authed = check_auth()\n    if (!is_authed) {\n      return <AuthorizePage chainAcct={login_state.addr}></AuthorizePage>\n    }\n    this.chain_addr = login_state.addr\n\n    // if not authorized, skip to sign up page\n    if(this.state.ui === 0){\n      return (\n        <div>\n          <UserControl addr={login_state.addr} set_global_ui={this.set_global_ui} cm={this.contractManager}></UserControl>\n          <NewsList addr={login_state.addr} cm={this.contractManager}> </NewsList>\n        </div>\n      );\n    } else if(this.state.ui === 1){\n      return (\n        <div>\n          <UserControl addr={login_state.addr} set_global_ui={this.set_global_ui} cm={this.contractManager}></UserControl>\n          {this.create_new_group()}\n        </div>\n      );\n    } else if (this.state.ui === 2){\n      return (\n        <div>\n          <UserControl addr={login_state.addr} set_global_ui={this.set_global_ui} cm={this.contractManager}></UserControl>\n          {this.add_member()}\n        </div>\n      );\n    } else if (this.state.ui === 3){\n      return (\n        <div>\n          <UserControl addr={login_state.addr} set_global_ui={this.set_global_ui} cm={this.contractManager}></UserControl>\n          {this.create_new_vote()}\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}